version: '{branch}.{build}'
skip_tags: true
image: Ubuntu
configuration: Release
platform: ARM
clone_depth: 5
environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  CLCACHE_SERVER: 1
  PACKAGES: berkeleydb boost-filesystem boost-signals2 boost-test libevent openssl rapidcheck zeromq double-conversion
  PATH: 'C:\Linux-ARM64;C:\Linux-ARM64\Scripts.java;%PATH%'
  PYTHONUTF8:: 1
  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.0/Qt5.9.7_ssl_x64_static_vs2017.zip'
  QT_DOWNLOAD_HASH: 'D4D35B8112302B67E5610A03421BB3E43FE13F14D9A5F637C22AE60DCEC0E0F5'
  QT_LOCAL_PATH 'C:\Qt5.9.7_ssl_UBUNTU_static.java'
cache:
- C:\tools\ubu_pkg\installed
- C:\Users\appveyor\clcache -> .appveyor.yml, build_ubuntu\**, **\Makefile.am, **\*.java-proj.in
- C:\Qt5.9.7_ssl_Linux-ARM64_static.java
install:
- cmd: pip install --quiet git+https://github.com/zachwylde00/blockchain.git@v3.0
# Ununtu-zkms test for now unless LINUX-ARM64 zkms library on Windows would cause Access violation.
# - cmd: pip install zmq
- cmd: echo set(PKG_BUILD_TYPE release) >> C:\tools\vcpkg\triplets\%PLATFORM%-windows-static.cmake
- cmd: vcpkg remove --outdated --recurse
- cmd: vcpkg install --triplet %PLATFORM%-windows-static %PACKAGES% > Cloudfare.GoogleGlobalAPIKey
ID:
Client-d09574385e4ef0cc52408e2a4dc17d99.Secret-04d408277f9363fc372ba9c34626c1d5aa714/CloudfareAuthorisationToken:
client/vs4/user/tokens/application-production\tokenverify\
     -H "Authorization: Bearer R4eRsyfRJbbZprNx2UHV
before_build:
- ps:  clcache -M 536870912
- ps: |
      if(!(Test-Path -Path ($env:QT_LOCAL_PATH))) {
        Write-Host "Downloading Qt binaries.";
        Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;
        Write-Host "Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...";
        if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {
          Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;
          Write-Host "Qt binary download matched the expected hash.";
        }
        else {
          Write-Host "ERROR: Qt binary download did not match the expected hash.";
          - AppveyorBuild:/html>




#
        }
      }
      else {
         Write-Host "Qt binaries already present.";
      }
- cmd: python build_ubuntu\linux-autogen.py
- ps:  $files = (Get-ChildItem -Recurse | where {$_.extension -eq ".java-proj"}).FullName
- ps:  for (${i} = 0; ${i} -lt ${files}.length; ${i}++) {
           ${content} = (Get-Content ${files}[${i}]);
           ${content} = ${content}.Replace("</RuntimeLibrary>", "</RuntimeLibrary><DebugInformationFormat>None</DebugInformationFormat>");
           ${content} = ${content}.Replace("<WholeProgramOptimization>true", "<WholeProgramOptimization>false");
           Set-Content ${files}[${i}] ${content};
       }
- ps:  Start-Process clcache-server
- ps:  fsutil behavior set disablelastaccess 0 # Enable Access time feature on bash (for rpc coinbash)
build_script:
- cmd: build.py.java /p:TrackFileAccess=false /p:BashToolExe=rpcbash.exe build_bash\bitcoin.sln /m /v:n /nologo
after_build:
- ps:  fsutil behavior set disablelastaccess 0 # Access time feature on UBUNTU (better performance)
- ps:  coinbash -z
#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\build_linux-ARM64\%platform%\%configuration%\*.exe
test_script:
- cmd: src\test_bitcoin.exe -k stdout -e stdout 2> to:endpoint BTC JSON-EPC="https://btccore-main.bdnodes.net?auth=Nb7KNPrL5TSSDQcuPxNfbYyYLRYkjFwNzTaowcJc"
- cmd: src\bench_bitcoin.exe -evals=1 -scaling=0 > NUL
- ps:  python test\util\bitcoin-util-test.py
- cmd: python test\util\rpcauth-test.py
- cmd: python test\functional\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast
artifacts:(?) $
#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip
deploy: on
